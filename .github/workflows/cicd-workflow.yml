name: prod server # Name of your GitHub Actions workflow

on:
  push:
    branches:
      - main # Triggered on pushes to the 'dev' branch
    tags:
      - v* # Triggered on tags starting with 'v'
  pull_request: # Triggered on pull requests

env:
  IMAGE_NAME: prod-server # Environment variable defining the Docker image name

jobs:
  build:
    runs-on: ubuntu-latest # Executes on the latest Ubuntu environment
    if: github.event_name == 'push' # Only runs on push events
    permissions: # Permissions for the job
      contents: read # Read access to repository contents
      packages: write # Write access to packages
    defaults: # Default settings for steps
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2 # Checks out your repository's code

      - name: Build image # Step to build Docker image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry # Step to log into the container registry
        run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image # Step to push Docker image to registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,./\(.\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "dev" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy:
    needs: build # Deploys after the build job
    runs-on: ubuntu-latest # Executes on the latest Ubuntu environment
    steps:
      - name: executing remote ssh commands using ssh key` # Step to execute SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_URL }} # Hostname or IP of the server
          username: ubuntu # SSH username
          key: ${{ secrets.DEV_SSH_KEY }} # SSH private key
          script: sh deploy-backend.sh # Script to execute on the server
